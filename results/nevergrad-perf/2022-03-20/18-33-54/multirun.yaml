hydra:
  run:
    dir: ${outputs}/${experiment}/${now:%Y-%m-%d}/${now:%H-%M-%S}/${experiment}-C0
  sweep:
    dir: ${outputs}/${experiment}/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${experiment}-C${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '%(asctime)s %(name)s] %(message)s'
        datefmt: '%M%d %H:%m:%S'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: hydra
  overrides:
    hydra: []
    task:
    - outputs=results
    - experiment=nevergrad-perf
    - autotuner=nevergrad
    - autotuner.optimization_target=perf
    - autotuner.search_time_seconds=10
    - autotuner.algorithm_config.episode_length=2
  job:
    name: tune
    override_dirname: autotuner.algorithm_config.episode_length=2,autotuner.optimization_target=perf,autotuner.search_time_seconds=10,autotuner=nevergrad,experiment=nevergrad-perf,outputs=results
    id: ???
    num: ???
    config_name: default
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.0
    cwd: /home/dx4/tools/compiler2
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/dx4/tools/compiler2/llvm_autotuning/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    choices:
      benchmarks: poj104
      autotuner: nevergrad
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
autotuner:
  algorithm: nevergrad
  optimization_target: perf
  search_time_seconds: 10
  algorithm_config:
    episode_length: 2
    optimizer: DiscreteLenglerOnePlusOne
benchmarks:
  benchmarks:
  - uris:
    - benchmark://poj104-v0/1/13
    - benchmark://poj104-v0/1/17
    - benchmark://poj104-v0/2/5
    - benchmark://poj104-v0/2/11
executor:
  type: local
  cpus: -1
outputs: results
experiment: nevergrad-perf
num_replicas: 10
